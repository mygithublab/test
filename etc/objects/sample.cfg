define host{
        name                            host-sample     ; The name of this host template
        notifications_enabled           1       	; Host notifications are enabled
        event_handler_enabled           1       	; Host event handler is enabled
        flap_detection_enabled          1       	; Flap detection is enabled
        process_perf_data               1       	; Process performance data
        retain_status_information       1       	; Retain status information across program restarts
        retain_nonstatus_information    1       	; Retain non-status information across program restarts
	notification_period		24x7-sample	; Send host notifications at any time
	check_period			24x7-sample	; By default, Linux hosts are checked round the clock
	check_interval			1		; Actively check the host every 5 minutes
	retry_interval			1		; Schedule host check retries at 1 minute intervals
	max_check_attempts		10		; Check each Linux host 10 times (max)
        check_command           	check-host-alive ; Default command to check Linux hosts
	notification_period		24x7-sample	; Linux admins hate to be woken up, so we only notify during the day
	notification_interval		120		; Resend notifications every 2 hours
	notification_options		d,u,r		; Only send notifications for specific host states
	contact_groups			adminssample		; Notifications get sent to the admins by default        
	register                        0       	; DONT REGISTER THIS DEFINITION - ITS NOT A REAL HOST, JUST A TEMPLATE!
        }

define service{
        name                            service-sample	 	; The 'name' of this service template
        active_checks_enabled           1       		; Active service checks are enabled
        passive_checks_enabled          1    		   	; Passive service checks are enabled/accepted
        parallelize_check               1       		; Active service checks should be parallelized (disabling this can lead to major performance problems)
        obsess_over_service             1       		; We should obsess over this service (if necessary)
        check_freshness                 0       		; Default is to NOT check service 'freshness'
        notifications_enabled           1       		; Service notifications are enabled
        event_handler_enabled           1       		; Service event handler is enabled
        flap_detection_enabled          1       		; Flap detection is enabled
        process_perf_data               1       		; Process performance data
        retain_status_information       1       		; Retain status information across program restarts
        retain_nonstatus_information    1       		; Retain non-status information across program restarts
        is_volatile                     0       		; The service is not volatile
        check_period                    24x7-sample		; The service can be checked at any time of the day
        max_check_attempts              3			; Re-check the service up to 3 times in order to determine its final (hard) state
        check_interval                  1			; Check the service every 10 minutes under normal conditions
        retry_interval                  1			; Re-check the service every two minutes until a hard state can be determined
        contact_groups                  adminssample			; Notifications get sent out to everyone in the 'admins' group
	notification_options		w,u,c,r			; Send notifications about warning, unknown, critical, and recovery events
        notification_interval           60			; Re-notify about service problems every hour
        notification_period             24x7-sample		; Notifications can be sent out at any time
	action_url			/nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$' onMouseOver='showGraphPopup(this)' onMouseOut='hideGraphPopup()' rel='/nagiosgraph/cgi-bin/showgraph.cgi?host=$HOSTNAME$&service=$SERVICEDESC$&period=day&rrdopts=-w+450+-j
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL SERVICE, JUST A TEMPLATE!
        }

define contact{
        name                            contact-sample    	; The name of this contact template
        service_notification_period     24x7-sample		; service notifications can be sent anytime
        host_notification_period        24x7-sample		; host notifications can be sent anytime
        service_notification_options    w,u,c,r,f,s		; send notifications for all service states, flapping events, and scheduled downtime events
        host_notification_options       d,u,r,f,s		; send notifications for all host states, flapping events, and scheduled downtime events
        service_notification_commands   notify-service-by-email-sample	; send service notifications via email
        host_notification_commands      notify-host-by-email-sample	; send host notifications via email
        register                        0       		; DONT REGISTER THIS DEFINITION - ITS NOT A REAL CONTACT, JUST A TEMPLATE!
        }

define timeperiod{
        timeperiod_name 24x7-sample
        alias           24 Hours A Day, 7 Days A Week
        sunday          00:00-24:00
        monday          00:00-24:00
        tuesday         00:00-24:00
        wednesday       00:00-24:00
        thursday        00:00-24:00
        friday          00:00-24:00
        saturday        00:00-24:00
        }

define command{
	command_name	notify-host-by-email-sample
	command_line	/usr/bin/printf "%b" "***** Sample *****\n\nNotification Type: $NOTIFICATIONTYPE$\nHost: $HOSTNAME$\nState: $HOSTSTATE$\nAddress: $HOSTADDRESS$\nInfo: $HOSTOUTPUT$\n\nDate/Time: $LONGDATETIME$\n" | /bin/mail -s "** $NOTIFICATIONTYPE$ Host Alert: $HOSTNAME$ is $HOSTSTATE$ **" $CONTACTEMAIL$
	}

define command{
	command_name	notify-service-by-email-sample
	command_line	/usr/bin/printf "%b" "***** Sample *****\n\nNotification Type: $NOTIFICATIONTYPE$\n\nService: $SERVICEDESC$\nHost: $HOSTALIAS$\nAddress: $HOSTADDRESS$\nState: $SERVICESTATE$\n\nDate/Time: $LONGDATETIME$\n\nAdditional Info:\n\n$SERVICEOUTPUT$\n" | /bin/mail -s "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **" $CONTACTEMAIL$
	}

define contact{
	use                             contact-sample
	contact_name                    nagiosadminsample		
        alias                           Nagios Admin		
        email                           nagios@localhost	
        }

define contactgroup{
        contactgroup_name       adminssample
        alias                   Nagios Administrators
        members                 nagiosadminsample
        }

############################
############################
#
#Deline HOST
#
############################
############################

define host{
        use                     host-sample           
	host_name               sample
        alias                   samplehost_test12
        address                 127.0.0.1
        }



define host{
	use			host-sample
	host_name		test
	alias			samplehost_test
	address			127.0.0.1
	}



define hostgroup{
        hostgroup_name  sample-servers 
        alias           Sample Servers 
        members         sample,test     
        }

############################
############################
#
#Deline SERVICE
#
############################
############################


define service{
        use                             service-sample
        hostgroup_name  		sample-servers
        service_description             PING
	check_command			check_ping!100.0,20%!500.0,60%
        }


define service{
        use                             service-sample         
        hostgroup_name                  sample-servers
        service_description             Root Partition
        check_command                   check_local_disk!20%!10%!/
        }


define service{
        use                             service-sample         
        hostgroup_name                  sample-servers
        service_description             Current Users
        check_command                   check_local_users!20!50
        }


define service{
        use                             service-sample         ; Name of service template to use
        hostgroup_name                  sample-servers
        service_description             Total Processes
        check_command                   check_local_procs!250!400!RSZDT
        }


define service{
        use                             service-sample         ; Name of service template to use
        hostgroup_name                  sample-servers
        service_description             Current Load
        check_command                   check_local_load!0.9,0.7,0.5!1,0.8,0.6
        }


define service{
        use                             service-sample         ; Name of service template to use
        hostgroup_name                  sample-servers
        service_description             Swap Usage
        check_command                   check_local_swap!20!10
        }



define service{
        use                             service-sample         ; Name of service template to use
        hostgroup_name                  sample-servers
        service_description             SSH
        check_command                   check_ssh
        notifications_enabled           0
        }



define service{
        use                             service-sample         ; Name of service template to use
        hostgroup_name                  sample-servers
        service_description             HTTP
        check_command                   check_http
        notifications_enabled           0
        }




define service{
        use                             service-sample
        hostgroup_name                  sample-servers
        service_description             TCP Traffic on Container NIC
        check_command                   check_tcp_traffic!1000!10000!eth0!1000
        notifications_enabled           0
        }



define service{
        use                             service-sample
        hostgroup_name                  sample-servers
        service_description             Free Memory
        check_command                   check_fmem!50!20
        notifications_enabled           0
        }


define service{
        use                             service-sample
        hostgroup_name                  sample-servers
        service_description             Free Cache Memory
        check_command                   check_cmem!60!30
        notifications_enabled           0
        }

